// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id Int @id @default(autoincrement())
  googleId    String   @unique
  username    String?
  email       String?  @unique
  profilePic  String? 
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}


model Group{
  id Int @id @default(autoincrement())
  userId Int
  groupName String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum Role {
  OWNER
  MEMBER
}

model UserGroup {
  id Int @id @default(autoincrement())
  userId Int
  groupId Int
  role  Role
}


model Event{
  id Int @id @default(autoincrement())
  userId Int
  eventName String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model UserEvents{
  id Int @id @default(autoincrement())
  userId Int
  eventId Int
  role String
}

model Registry{
  id Int @id @default(autoincrement())
  name String
  userId Int
  eventId Int @default(1)
  gifts Gift[] @relation("RegistryGifts")
}

model Gift{
  id Int @id @default(autoincrement())
  giftName String 
  giftUrl String  
  registryId Int
  registry Registry @relation("RegistryGifts",fields: [registryId], references: [id])
  giftStatus Boolean
}

model  UserGifts {
  id Int @id @default(autoincrement())
  userId Int 
  giftId Int  
}